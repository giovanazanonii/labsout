<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LABSOUT</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <link rel="stylesheet" href="css/login.css">
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <div id="feedbackToast" class="toast" style="position: fixed; top: 20px; right: 20px; z-index: 1050;" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000">
        <div class="toast-body" id="feedbackMessage"></div>
    </div>


    <div class="square">
        <div class="purple-section">
            <h1 class="title">LABSOUT</h1>
            <p>_____________________________</p>
            <p class="subtitle">Bem vindo de<br> volta!</p>
        </div>
        <div class="login-section">
            <form action="/login" method="POST" onsubmit="return validarFormulario()">
                <div class="form-group">
                    <label for="cpf">CPF:</label>
                    <input type="text" class="form-control" id="cpf" name="cpf" placeholder="Digite seu CPF" maxlength="14">
                </div>
                <div class="form-group">
                    <label for="password">Senha:</label>
                    <input type="password" class="form-control" id="senha" name="senha" placeholder="Digite sua senha" maxlength="20">
                    <button type="button" class="eye-icon" onclick="olharSenha()">
                        <i class="fas fa-eye" id="eyeIcon"></i>
                    </button>
                </div>
                <button type="submit" class="btn btn-primary"><strong>Entrar</strong></button>
            </form>
        </div>
        <img src="imagens/LOGIN.png" alt="Login Image" class="login-image">
    </div>


    <script>
        // máscara de CPF
        function mascaraCPF(input) {
            let value = input.value.replace(/\D/g, ''); // remove caracteres não numéricos
            value = value.replace(/(\d{3})(\d)/, '$1.$2'); // adiciona o primeiro ponto
            value = value.replace(/(\d{3})(\d)/, '$1.$2'); // adiciona o segundo ponto
            value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2'); // adiciona o traço


            input.value = value; // atualiza o valor do input
        }


        // máscara no campo CPF enquanto o usuário digita
        document.getElementById('cpf').addEventListener('input', function () {
            mascaraCPF(this);
        });


        //mudar o olho ao clicar no icone de senha
        function olharSenha() {
            const senhaInput = document.getElementById('senha');
            const eyeIcon = document.getElementById('eyeIcon');
            const tipo = senhaInput.type === 'password' ? 'text' : 'password';


            senhaInput.type = tipo;


            // altera o ícone do olho
            eyeIcon.className = tipo === 'password' ? 'fas fa-eye' : 'fas fa-eye-slash';
        }


        // validação do formulário
        function validarFormulario() {
            const cpf = document.getElementById('cpf').value;
            const senha = document.getElementById('senha').value;


            // verifica campos estão vazios
            //.trim é para garantir que qualquer espaço em branco digitado pelo usuário será removido.
            if (cpf.trim() === '' || senha.trim() === '') {
                showToast('Por favor, preencha todos os campos.', 'danger');
                return false;
            }
            return true;
        }


        //para mostrar o toast
        function showToast(message, type) {
            const toast = document.getElementById('feedbackToast');
            const messageElement = document.getElementById('feedbackMessage');
            messageElement.textContent = message;
            toast.classList.add('show');


            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }


        // mostrando a mensagem de feedback ao carregar a página
        window.addEventListener('load', () => {
            const queryParams = new URLSearchParams(window.location.search);
            const mensagem = queryParams.get('message');
            const tipo = queryParams.get('type');


            if (mensagem) {
                showToast(mensagem, tipo);
            }
        });
    </script>
</body>
</html>
