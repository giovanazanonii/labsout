
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <link rel="icon" href="/imagens/icone.png" type="image/png">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/cadastroambiente.css">
    <title>LABSOUT</title>  
    <style>
        .navbar a {
            color: #fff;
            text-decoration: none; 
        }
        .navbar a:hover {
            color: #ddd;
        }
        .navbar-title {
            color: #fff;
            font-size: 20px;
            margin-left: 10px; 
        }
        .toast { 
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); 
            z-index: 1050;
            min-width: 200px;
            opacity: 0;
            transition: opacity 0.5s;
            background-color: #6b6b6b;
            color: #fff;
            padding: 10px;
            border-radius: 10px;
        }

        .toast.show {
            opacity: 1;
            }
    </style>
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="navbar-left">
            <a href="/inicialadmin" class="navbar-icon">
                <i class="bi bi-calendar2-week"></i>
            </a>
            <span class="navbar-title"><strong>LABSOUT</strong></span> 
        </div>
    
        <div class="navbar-center">
            <ul class="navbar-menu">
                <li><a href="/laboratorios">Ambientes</a></li>
            </ul>
        </div>
    
        <div class="navbar-right">
            <button id="botaoSair" class="icon-sair"><i class="bi bi-box-arrow-right"></i></button>
        </div>
    </nav>
    
    <h1><strong>CADASTRAR AMBIENTES</strong></h1>
    <div id="feedbackToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            <span id="feedbackMessage"></span>
        </div>
    </div>

    </div>
    <div class="square">
        <div class="ambiente">
            <form method="POST" action="/<%= ambiente ? 'atualizarambiente/' + ambiente.id_ambiente : 'cadastroambiente' %>" onsubmit="return validarFormulario()">
                <div class="form-group">
                    <label for="nomeambiente">Nome do ambiente:</label>
                    <input type="text" class="form-control" id="nomeambiente" name="nomeambiente" value="<%= ambiente ? ambiente.nome_ambiente : '' %>" placeholder="Digite o nome do laboratório">
                </div>
                <div class="form-group">
                    <label for="capacidade">Capacidade de alunos:</label>
                    <input type="text" class="form-control" id="capacidade" name="capacidade" value="<%= ambiente ? ambiente.capacidade_ambiente : '' %>" placeholder="Digite a capacidade">
                </div>
                <div class="form-group">
                    <label for="capacidade">Responsável pelo ambiente:</label>
                    <input type="text" class="form-control" id="responsavel_ambiente" name="responsavel_ambiente" value="<%= ambiente ? ambiente.nome_responsavel : '' %>" placeholder="Digite o responsável pelo ambiente">
                </div>
                <div class="form-group">
                    <label for="capacidade">E-mail do responsável:</label>
                    <input type="text" class="form-control" id="email_responsavel" name="email_responsavel" value="<%= ambiente ? ambiente.email_responsavel : '' %>" placeholder="Digite o e-mail">
                </div>

                <div class="form-group">
                    <label for="tipo">Setor do ambiente:</label>
                    <select class="form-control" id="id_setor_ambiente" name="id_setor_ambiente">
                        <% setores.forEach(function(setor) { %>
                            <option value="<%= setor.id_setor_ambiente %>">
                                <%= setor.nome_setor %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                
                <div class="form-group2">
                    <label for="descricao_ambiente">Descrição do ambiente:</label>
                    <textarea class="form-control descricao-larga" id="descricao_ambiente" name="descricao_ambiente" placeholder="Digite uma descrição para o ambiente"><%= ambiente ? ambiente.descricao_ambiente : '' %></textarea>
                </div>

                <button type="submit" class="btn btn-primary"><strong><%= ambiente ? 'Atualizar' : 'Cadastrar' %></strong></button>
            </form>
            
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        //sair do sistema
        const botaoSair = document.getElementById('botaoSair');
            botaoSair.addEventListener('click', function () {
                Swal.fire({
                    title: 'Sair do sistema?',
                    text: "Você realmente deseja sair?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sim, sair!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                    // Fazer a requisição de logout para o servidor
                    fetch('/logout', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire(
                                'Saída realizada!',
                                'Você foi desconectado com sucesso.',
                                'success'
                            ).then(() => {
                                // Redirecionar para a página inicial
                                window.location.href = '/';
                            });
                        }else {
                            return response.json().then(data => {
                                Swal.fire('Erro', data.message || 'Erro ao sair do sistema.', 'error');
                        });
                    }
                })
                    .catch(error => {
                        console.error('Erro ao tentar sair:', error);
                        Swal.fire('Erro', 'Erro ao tentar sair do sistema.', 'error');
                    });
                    }
                });
            });


        // validação do formulário
        function validarFormulario() {
            const nome = document.getElementById('nomeambiente').value;
            const capacidade = document.getElementById('capacidade').value;
            const localizacao = document.getElementById('localizacao').value;

            // verifica campos estão vazios 
            //.trim é para garantir que qualquer espaço em branco digitado pelo usuário será removido.
            if (nome.trim() ==='' || capacidade.trim() === '' || localizacao.trim() === '') {
                showToast('Por favor, preencha todos os campos.', 'error');
                return false;
            }
            return true;
        }


        // mostra o toast de feedback na tela com a mensagem
        function showToast(message, type) {     //elemento HTML correspondente ao toast = feedbackToast
            const toast = document.getElementById('feedbackToast'); //local onde a mensagem será exibida = feedbackMessage
            const messageElement = document.getElementById('feedbackMessage');
            messageElement.textContent = message;
            toast.classList.add('show');

            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000); // Ocultar após 3 segundos
        }

        //verifica a URL da página para ver se tem uma mensagem para ser exibida
        window.addEventListener('load', () => {
                                //pega os parâmetros da URL
        const queryParams = new URLSearchParams(window.location.search);

        //verifica se há uma mensagem e tipo presentes na URL
        const mensagem = queryParams.get('message');
        const tipo = queryParams.get('type');

        //se tiver chama a função showToast com os parâmetros extraídos para exibir o toast
        if (mensagem) {
            showToast(mensagem, tipo);
        }
    });
    </script>
</body>
</html>