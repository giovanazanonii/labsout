<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LABSOUT</title>
    <link rel="icon" href="/imagens/icone.png" type="image/png">
    <link rel="stylesheet" href="/css/avaliar.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css">
    <style>
        .navbar a {
            color: #fff;
            text-decoration: none; 
        }
        .navbar a:hover {
            color: #ddd;
        }
        .navbar-title {
            color: #fff;
            font-size: 20px;
            margin-left: 10px; 
        }
        textarea::placeholder {
            font-size: 14px;
            color: #c4c4c4;
        }
        .deletar-button {
        padding: 11px;
        background: none;
        border: none;
        cursor: pointer;
        font-size: 18px;
        transition: transform 0.2s, color 0.2s;
        }
        .deletar-button:hover {
            color: red;
            transform: scale(1.1);
        }
    </style>
</head>
<body>

    <nav class="navbar">
        <div class="navbar-left">
            <a href="/inicialusuario" class="navbar-icon">
                <i class="bi bi-calendar2-week"></i>
            </a>
            <span class="navbar-title"><strong>LABSOUT</strong></span> 
        </div>
    </nav>

    <h2>Avalie sua experiência</h2>

    <div class="limite">
        <h4>Escreva aqui: </h4>

        <div class="char-count">
            Quantidade de caracteres:  
            <span id="charCount">200</span>
        </div>
    
        <div class="area-texto">
            <textarea id="textInput" rows="4" maxlength="140" placeholder="Compartilhe sua experiência conosco! Sua opinião é essencial para tornar nossa plataforma ainda melhor." oninput="postar()"></textarea>
    
            <div class="avaliacao">
                <span>Avalie com estrelas</span>
                <div class="estrelas">
                    <i class="bi bi-star" data-value="1"></i>
                    <i class="bi bi-star" data-value="2"></i>
                    <i class="bi bi-star" data-value="3"></i>
                    <i class="bi bi-star" data-value="4"></i>
                    <i class="bi bi-star" data-value="5"></i>
                </div>
            </div>
    
        </div>
    
        <button class="btn-postar"><strong>Postar</strong></button>
    </div>


<br><br><br><br>
    <div class="comentarios">
        <h3>Comentários de outros usuários</h3>
        <div id="comentarios-lista">
        </div>
    </div>
    <script>
               const id_usuario = Number("<%= id_usuario %>");
                document.querySelector('.btn-postar').addEventListener('click', () => {
                    const comentario = document.getElementById('textInput').value;
                    const nota = document.querySelectorAll('.avaliacao .bi-star-fill').length;

                    if (!id_usuario) {
                        alert("ID do usuário não está disponível.");
                        return;
                     }

                fetch('/avaliacao', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({id_usuario, nota, comentario })
                })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                })
                .catch(error => console.error('Erro:', error));
            });


        // Função para atualizar a contagem de caracteres
        function postar() {
            const textInput = document.getElementById("textInput");
            const charCount = document.getElementById("charCount");
            const maxLength = textInput.getAttribute("maxlength");
            charCount.textContent = maxLength - textInput.value.length;
        }

      // Função para avaliar com estrelas
            const estrelas = document.querySelectorAll('.estrelas .bi-star');
            estrelas.forEach((estrela, index) => {
            estrela.addEventListener('click', () => {
        // Limpa as classes 'bi-star-fill' de todas as estrelas
            estrelas.forEach(e => {
            e.classList.remove('bi-star-fill');
            e.classList.add('bi-star');
        });

        // Adiciona a classe 'bi-star-fill' às estrelas até a clicada
            for (let i = 0; i <= index; i++) {
                estrelas[i].classList.remove('bi-star');
                estrelas[i].classList.add('bi-star-fill');
        }
    });
});
// Função para adicionar os comentários dinamicamente
async function exibirComentarios() {
        try {
            const response = await fetch('/comentarios');
            const comentarios = await response.json();

            const comentariosLista = document.getElementById('comentarios-lista');
            comentariosLista.innerHTML = ''; // Limpa os comentários anteriores

            comentarios.forEach(comentario => {
                const comentarioItem = document.createElement('div');
                comentarioItem.classList.add('comentario-item');

                // Estrelas
                let estrelasHTML = '';
                for (let i = 1; i <= 5; i++) {
                    estrelasHTML += (i <= comentario.nota) ? 
                        '<i class="bi bi-star-fill"></i>' : 
                        '<i class="bi bi-star"></i>';
                }

                // Formata a data
                const dataAvaliacao = new Date(comentario.data_avaliacao);
                const dataFormatada = `${dataAvaliacao.toLocaleDateString()} ${dataAvaliacao.toLocaleTimeString()}`;

                comentarioItem.innerHTML = `
                    <div class="detalhes">
                        <div class="usuario">${comentario.nome_usuario}</div>
                        <div class="estrelas">${estrelasHTML}</div>
                        <div class="data">${dataFormatada}</div>
                        <div class="texto">${comentario.comentario}</div>
                    </div>
                    <div class="menu-container">
                        ${comentario.id_usuario === id_usuario ? 
                            '<button class="menu-btn"><i class="bi bi-three-dots"></i></button>' : ''}
                        <div class="menu-dropdown">
                            <button class="menu-option excluir" onclick="deletarComentario(${comentario.id_avaliacao})">Excluir</button>
                        </div>
                    </div>
                `;


                const usuarioLogadoId = Number("<%= id_usuario %>");

                comentariosLista.appendChild(comentarioItem);
            });
        } catch (error) {
            console.error('Erro ao carregar comentários:', error);
        }
    }
    // Função para deletar o comentário
    async function deletarComentario(id_avaliacao) {
        
    try {
        // Verifique se o comentarioId está sendo passado corretamente
        console.log('Deletando comentário com ID:', id_avaliacao);

        const response = await fetch(`/deletarcomentario?id_comentario=${id_avaliacao}`, {
            method: 'DELETE',
        });
        
        // Verifique se a resposta foi bem-sucedida
        if (!response.ok) {
            throw new Error('Erro na requisição');
        }

        const data = await response.json();
        
        if (data.message === 'Comentário deletado com sucesso!') {
            alert('Comentário excluído com sucesso!');
            exibirComentarios();  // Recarregar os comentários após a exclusão
        } else {
            alert('Erro ao excluir comentário');
        }
    } catch (error) {
        console.error('Erro ao tentar deletar comentário:', error);
        alert('Erro ao excluir comentário');
    }
}
        window.onload = exibirComentarios;


        document.addEventListener('click', (event) => {
            const isMenuButton = event.target.closest('.menu-btn');
            const dropdown = event.target.closest('.comentario-item')?.querySelector('.menu-dropdown');

         // Oculta todos os menus dropdown
            document.querySelectorAll('.menu-dropdown').forEach(menu => {
            menu.style.display = 'none';
        });

        // Exibe o menu dropdown clicado
            if (isMenuButton && dropdown) {
                  dropdown.style.display = 'block';
                event.stopPropagation();
            }
        });

        window.onload = exibirComentarios;
    </script>
</body>
</html>
